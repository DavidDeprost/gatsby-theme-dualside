$bg: rgba(255, 255, 197, 0.9);
$fg: rgba(200, 0, 100, 0.8);

:root {
  --bg: #{$bg};
  --fg: #{$fg};
}

* {
  /* border: 3px solid red; */
}

body {
  min-height: 100vh;
  max-width: 100vw;
  margin: 0;
  background: var(--bg);
  color: var(--fg);
  /* Disable scrolling on body: */
  overflow: hidden;
  font-family: "Open Sans", sans-serif;
}

#content {
  /* Customize scrollbar track: */
  &::-webkit-scrollbar {
    width: 0.6rem;
    background: transparent;
  }
  /* Customize scrollbar thumb: */
  &::-webkit-scrollbar-thumb {
    border-radius: 0.6rem;
    background: darken($bg, 10%);
    // One problem with darken/lighten is that it cannot process a
    // CSS custom property, since they are run-time properties,
    // and sass functions work at compile-time.
    // => This forces us to revert back to sass variables as input
    //    for the darken/lighten functions.
  }
}

#sb-content-left {
  $bg: rgb(255, 101, 0);
  $fg: rgba(200, 0, 100, 0.8);
  /* Customize scrollbar track: */
  &::-webkit-scrollbar {
    width: 0.6rem;
    background: transparent;
  }
  /* Customize scrollbar thumb: */
  &::-webkit-scrollbar-thumb {
    border-radius: 0.6rem;
    background: lighten($bg, 20%);
  }
}

#sb-content-right {
  $bg: rgb(226, 40, 226);
  $fg: rgba(200, 0, 100, 0.8);
  /* Customize scrollbar track: */
  &::-webkit-scrollbar {
    width: 0.6rem;
    background: transparent;
  }
  /* Customize scrollbar thumb: */
  &::-webkit-scrollbar-thumb {
    border-radius: 0.6rem;
    background: lighten($bg, 20%);
  }
}