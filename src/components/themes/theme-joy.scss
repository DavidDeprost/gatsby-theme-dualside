// Sass is used for global color variables to easily darken/lighten them.
// Afterwards, they are assigned to CSS custom properties, which sass cannot modify.
$bg: hsla(60, 100, 88.6, 0.9);
$color: hsla(330, 100, 39.2, 0.8);
$headerColor: rgb(82, 38, 228);

$left: (
  'bg': hsl(24, 100, 50),
);
$right: (
  'bg': hsl(300, 76.2, 52.2),
);

:root {
  --headerHeight: 4rem;
  --sidestripWidth: 0.5rem;
  // sidebar widths in portrait and landscape orientations:
  --portraitWidth: 80vw;
  --landscapeWidth: 30vw;
  --borderWidth: 2px;
  --transitionDuration: 0.5s;
}

body {
  /* border: 3px solid red; */
  min-height: 100vh;
  max-width: 100vw;
  margin: 0;
  background: $bg;
  color: $color;
  /* Disable scrolling on body: */
  overflow: hidden;
  font-family: "Open Sans", sans-serif;
}

#left {
  --bg: #{map-get($left, 'bg')};
}

#right {
  --bg: #{map-get($right, 'bg')};
}

.header {
  --color: #{$headerColor};
  --border: var(--borderWidth) solid #{lighten($headerColor, 15%)};
  --headerWidth: calc(100% - var(--headerHeight));
  &.main {
    --bg: linear-gradient(to right, orange, violet);
    --headerWidth: 100%;
    --float: none;
  }
  &.left {
    --float: right;
  }
  &.right {
    --float: left;
  }
}

.content {
  --direction: ltr;
  --padding: 5%;
  &.main {
    --padding: 2rem 10% 3rem;
    &::-webkit-scrollbar-thumb {
      --bg: #{$bg};
    }
  }
  &.left {
    &::-webkit-scrollbar-thumb {
      --bg: #{lighten(map-get($left, 'bg'), 20%)};
    }
  }
  &.right {
    --direction: rtl;
    &::-webkit-scrollbar-thumb {
      --bg: #{lighten(map-get($right, 'bg'), 20%)};
    }
  }
}

// #main {
//   .header {
//     --bg: linear-gradient(to right, orange, violet);
//     --color: #{$headerColor};
//     --border: var(--borderWidth) solid #{lighten($headerColor, 15%)};
//     --headerWidth: 100%;
//     --float: none;
//   }
//   .content {
//     --direction: ltr;
//     --padding: 2rem 10% 3rem;
//     &::-webkit-scrollbar-thumb {
//       --bg: #{$bg};
//     }
//   }
// }
// #left {
//   --bg: #{map-get($left, 'bg')};
//   .header {
//     --color: #{$headerColor};
//     --border: var(--borderWidth) solid #{lighten($headerColor, 15%)};
//     --headerWidth: calc(100% - var(--headerHeight));
//     --float: right;
//   }
//   .content {
//     --direction: ltr;
//     --padding: 5%;
//     &::-webkit-scrollbar-thumb {
//       // --bg: #{hsl(24, 100, 70)};
//       --bg: #{lighten(map-get($left, 'bg'), 20%)};
//     }
//   }
// }
// #right {
//   --bg: #{map-get($right, 'bg')};
//   .header {
//     --color: #{$headerColor};
//     --border: var(--borderWidth) solid #{lighten($headerColor, 15%)};
//     --headerWidth: calc(100% - var(--headerHeight));
//     --float: left;
//   }
//   .content {
//     --direction: rtl;
//     --padding: 5%;
//     &::-webkit-scrollbar-thumb {
//       // --bg: #{hsl(300, 76.2, 72.2)};
//       --bg: #{lighten(map-get($right, 'bg'), 20%)};
//     }
//   }
// }



